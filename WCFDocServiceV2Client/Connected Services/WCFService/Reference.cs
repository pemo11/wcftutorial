//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFDocServiceV2Client.WCFService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document", Namespace="http://schemas.datacontract.org/2004/07/WCFDocServiceV2.DAL")]
    [System.SerializableAttribute()]
    public partial class Document : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DocIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WCFDocServiceV2Client.WCFService.MediaType MediaIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocAuthor {
            get {
                return this.DocAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.DocAuthorField, value) != true)) {
                    this.DocAuthorField = value;
                    this.RaisePropertyChanged("DocAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocId {
            get {
                return this.DocIdField;
            }
            set {
                if ((this.DocIdField.Equals(value) != true)) {
                    this.DocIdField = value;
                    this.RaisePropertyChanged("DocId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocTitle {
            get {
                return this.DocTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.DocTitleField, value) != true)) {
                    this.DocTitleField = value;
                    this.RaisePropertyChanged("DocTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WCFDocServiceV2Client.WCFService.MediaType MediaId {
            get {
                return this.MediaIdField;
            }
            set {
                if ((this.MediaIdField.Equals(value) != true)) {
                    this.MediaIdField = value;
                    this.RaisePropertyChanged("MediaId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MediaType", Namespace="http://schemas.datacontract.org/2004/07/WCFDocServiceV2.DAL")]
    public enum MediaType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pdf = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Office = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Miscellaneous = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://wcf/documents", ConfigurationName="WCFService.IDocumentService")]
    public interface IDocumentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf/documents/IDocumentService/GetDocuments", ReplyAction="http://wcf/documents/IDocumentService/GetDocumentsResponse")]
        WCFDocServiceV2Client.WCFService.Document[] GetDocuments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf/documents/IDocumentService/GetDocuments", ReplyAction="http://wcf/documents/IDocumentService/GetDocumentsResponse")]
        System.Threading.Tasks.Task<WCFDocServiceV2Client.WCFService.Document[]> GetDocumentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf/documents/IDocumentService/GetDocument", ReplyAction="http://wcf/documents/IDocumentService/GetDocumentResponse")]
        WCFDocServiceV2Client.WCFService.Document GetDocument(int DocId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf/documents/IDocumentService/GetDocument", ReplyAction="http://wcf/documents/IDocumentService/GetDocumentResponse")]
        System.Threading.Tasks.Task<WCFDocServiceV2Client.WCFService.Document> GetDocumentAsync(int DocId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf/documents/IDocumentService/SearchDocuments", ReplyAction="http://wcf/documents/IDocumentService/SearchDocumentsResponse")]
        WCFDocServiceV2Client.WCFService.Document[] SearchDocuments(string Filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://wcf/documents/IDocumentService/SearchDocuments", ReplyAction="http://wcf/documents/IDocumentService/SearchDocumentsResponse")]
        System.Threading.Tasks.Task<WCFDocServiceV2Client.WCFService.Document[]> SearchDocumentsAsync(string Filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDocumentServiceChannel : WCFDocServiceV2Client.WCFService.IDocumentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocumentServiceClient : System.ServiceModel.ClientBase<WCFDocServiceV2Client.WCFService.IDocumentService>, WCFDocServiceV2Client.WCFService.IDocumentService {
        
        public DocumentServiceClient() {
        }
        
        public DocumentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DocumentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFDocServiceV2Client.WCFService.Document[] GetDocuments() {
            return base.Channel.GetDocuments();
        }
        
        public System.Threading.Tasks.Task<WCFDocServiceV2Client.WCFService.Document[]> GetDocumentsAsync() {
            return base.Channel.GetDocumentsAsync();
        }
        
        public WCFDocServiceV2Client.WCFService.Document GetDocument(int DocId) {
            return base.Channel.GetDocument(DocId);
        }
        
        public System.Threading.Tasks.Task<WCFDocServiceV2Client.WCFService.Document> GetDocumentAsync(int DocId) {
            return base.Channel.GetDocumentAsync(DocId);
        }
        
        public WCFDocServiceV2Client.WCFService.Document[] SearchDocuments(string Filter) {
            return base.Channel.SearchDocuments(Filter);
        }
        
        public System.Threading.Tasks.Task<WCFDocServiceV2Client.WCFService.Document[]> SearchDocumentsAsync(string Filter) {
            return base.Channel.SearchDocumentsAsync(Filter);
        }
    }
}
